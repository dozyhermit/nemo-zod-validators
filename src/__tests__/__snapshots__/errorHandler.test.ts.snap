// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`errorHandlerWithSchema uses DEFAULT_ERROR_MESSAGE if fieldErrors is in flatten but empty object 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchema uses DEFAULT_ERROR_MESSAGE if fieldErrors is in flatten but empty string 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchema uses DEFAULT_ERROR_MESSAGE if fieldErrors is in flatten but undefined 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchema uses DEFAULT_ERROR_MESSAGE if fieldErrors not in flatten 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchema uses DEFAULT_ERROR_MESSAGE if flatten not in error 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchema uses fieldErrors if in error 1`] = `
{
  "message": {
    "field": [
      "Field error exists!",
    ],
  },
}
`;

exports[`errorHandlerWithSchemaFormErrors uses DEFAULT_ERROR_MESSAGE if flatten not in error 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchemaFormErrors uses DEFAULT_ERROR_MESSAGE if formErrors is in flatten but empty array 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchemaFormErrors uses DEFAULT_ERROR_MESSAGE if formErrors is in flatten but empty string 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchemaFormErrors uses DEFAULT_ERROR_MESSAGE if formErrors is in flatten but undefined 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchemaFormErrors uses DEFAULT_ERROR_MESSAGE if formErrors not in flatten 1`] = `
{
  "message": "Validation has failed",
}
`;

exports[`errorHandlerWithSchemaFormErrors uses formErrors if in error 1`] = `
{
  "message": [
    "Form error exists!",
  ],
}
`;
